import streamlit as st
import openai
import os

# ‚úÖ Configurar la API Key correctamente
api_key = os.getenv("OPENAI_API_KEY")  # Usa variables de entorno para mayor seguridad

# Si no tienes la API Key en una variable de entorno, puedes ponerla manualmente:
# api_key = "tu-clave-api-aqu√≠"

if not api_key:
    st.error("‚ö†Ô∏è Error: No se encontr√≥ la API Key de OpenAI. Aseg√∫rate de configurarla.")
    st.stop()

# ‚úÖ Crear el cliente de OpenAI correctamente
client = openai.OpenAI(api_key=api_key)

# ‚úÖ Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Chatbot ISO 55001", page_icon="ü§ñ")
st.title("Chatbot de Gesti√≥n de Activos - ISO 55001")

# ‚úÖ Inicializar historial de conversaci√≥n si no existe
if "messages" not in st.session_state:
    st.session_state["messages"] = [
        {"role": "system", "content": "Eres un experto en gesti√≥n de activos basado en la ISO 55001."}
    ]

# ‚úÖ Selecci√≥n del modelo para optimizaci√≥n de costos
model = st.radio("Selecciona el modelo GPT:", ("gpt-4-turbo", "gpt-3.5-turbo"))

# ‚úÖ Entrada del usuario
pregunta = st.text_input("Haz una pregunta sobre la ISO 55001:")

if st.button("Enviar") and pregunta:
    
    # ‚úÖ Asegurar que messages est√© en el estado de sesi√≥n
    if "messages" not in st.session_state:
        st.session_state["messages"] = []

    # ‚úÖ Agregar la pregunta al historial
    st.session_state["messages"].append({"role": "user", "content": pregunta})
    
    try:
        # ‚úÖ Llamar a la API de OpenAI
        response = client.chat.completions.create(
            model=model,
            messages=st.session_state["messages"],
            max_tokens=500  # Limitar tokens para optimizar costos
        )

        # ‚úÖ Extraer la respuesta correctamente
        respuesta = response.choices[0].message.content

        # ‚úÖ Agregar la respuesta al historial
        st.session_state["messages"].append({"role": "assistant", "content": respuesta})

        # ‚úÖ Mostrar respuesta
        st.write("**Chatbot:**", respuesta)
    
    except Exception as e:
        st.error(f"‚ö†Ô∏è Error al llamar a OpenAI: {str(e)}")

# ‚úÖ Mostrar historial de conversaci√≥n
st.subheader("Historial de Conversaci√≥n")
for message in st.session_state["messages"]:
    if message["role"] != "system":  # Omitir mensajes del sistema
        st.write(f"**{message['role'].capitalize()}**: {message['content']}")
